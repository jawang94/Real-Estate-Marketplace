// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
let SquareVerifier = artifacts.require('SquareVerifier');

contract('TestERC721Mintable', accounts => {
    // - use the contents from proof.json generated from zokrates steps
    const zkProof = require("../../zokrates/code/square/proof.json");

    describe('test solidity contract generated by Zokrates', function () {
        beforeEach(async function () {
            this.contract = await SquareVerifier.new();
        })

        // Test verification with correct proof
        it('verification should pass with correct proof', async function () {
            const result = undefined;
            result = await this.contract.verifyTx(zkProof.proof.a, zkProof.proof.b, zkProof.proof.c, zkProof.inputs);
            assert.equal(result?.logs?.length > 0, true, "Verification failed");
        })

        // Test verification with incorrect proof
        it('verification should fail with incorrect proof', async function () {
            const result = undefined;
            result = await this.contract.verifyTx(zkProof.proof.a, zkProof.proof.b, zkProof.proof.c, [13, 20]);
            assert.equal(result?.logs?.length > 0, false, "Verification passed");
        })
    });
})
